name: Test, lint, publish

on:
  push:
    branches:
      - master
      - feature/**
      - hotfix/**
      - bugfix/**
    tags:
      - "*"
    paths-ignore:
      - .github/badges/**

env:
  PYTHON_LATEST: "3.13"
  PYTHON_OLD_VERSIONS: '["3.9", "3.10", "3.11", "3.12"]'

jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ${{ fromJson(env.PYTHON_OLD_VERSIONS) }}
    steps:
      - uses: actions/checkout@v4
      - uses: astral-sh/setup-uv@v6
        with:
          python-version: ${{ matrix.python-version }}
      - run: uv sync --dev
      - run: uv run pytest -n2 .

  coverage-badge:
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - uses: actions/checkout@v4
      - uses: astral-sh/setup-uv@v6
        with:
          python-version: ${{ env.PYTHON_LATEST }}
      - run: uv sync --dev
      - run: uv run ruff check --no-fix .
      - run: uv run mypy meta_tags_parser scripts
      - run: uv build
      - run: uv run pytest -n2 . --cov-report=xml
      - run: uv run python scripts/generate_coverage_badge.py
      - uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: 'docs: update coverage badge'
          file_pattern: .github/badges/coverage.json

  publish-pypi:
    needs: coverage-badge
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/checkout@v4
      - uses: astral-sh/setup-uv@v6
        with:
          python-version: ${{ env.PYTHON_LATEST }}
      - name: Publish package
        continue-on-error: true
        run: |
          uv version "${GITHUB_REF_NAME#v}"
          uv build
          uv publish --username "${{ secrets.PYPI_USERNAME }}" --password "${{ secrets.PYPI_PASSWORD }}"
